Question :

https://leetcode.com/problems/letter-combinations-of-a-phone-number/

Approach :
Backtracking and Recursion 

Code in C++

class Solution {
    public :
    void solve(vector<string>&ans,int index,string output,string map[],string  &digits){
        if(index>=digits.length()){
            ans.push_back(output);
            return ;
        }
        int number=digits[index]-'0';
        string value=map[number];

        for(int i=0;i<value.length();i++){
            output.push_back(value[i]);
            solve(ans,index+1,output,map,digits);

            //backtracking
            output.pop_back();
        }
    }

public:
    vector<string> letterCombinations(string digits) {
        vector<string>ans;
        if(digits.length()==0) return ans;
        string output="";
        int index=0;
        string map[10]={"","","abc","def","ghi","jkl","mno","pqrs","tuv","wxyz"};

        solve(ans,index,output,map,digits);
        return ans;
    }
};


